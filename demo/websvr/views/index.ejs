<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <script type="text/javascript" src="/javascripts/tf.min.js"></script>
    <script type="text/javascript" src="/javascripts/Chart.bundle.min.js"></script>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1>Dosage Predictor</h1>
    <table>
      <tr>
          <td>
            race (use 0, 1, 2 only):
          </td>
          <td>
              <input id="input_race" name="input_race" type="text" size=5 />  
          </td>
      </tr>
      <tr>
          <td>
            weight in pounds:
          </td>
          <td>
            <input id="input_weight" name="input_weight" type="text" size=5 /> 
          </td>
      </tr>
      <tr>
          <td>
            blood pressure (Systolic only):
          </td>
          <td>
            <input id="input_bp" name="input_bp" type="text" size=5 /> 
          </td>
      </tr>
      <tr>
          <td>
            age:
          </td>
          <td>
            <input id="input_age" name="input_age" type="text" size=5 /> 
          </td>
      </tr>
    </table>
    <br/>
    <input onclick="test()" id="input_submit" name="input_submit" type="submit" value="Check Dosage Prediction"/>
    <input onclick="clearFields()" id="input_clear" name="input_clear" type="submit" value="Clear"/>
   
    <br/>
    <div style="width: 50%">
      <canvas id="canvas"></canvas>
    </div>
    <script>

      var model
      var mainChart

      window.onload = function() {
        mp = tf.loadLayersModel('/model/model.json');
        mp.then( function(value) {
          model = value;
        })
        cdata = initData(1)
        mainChart = drawChart(cdata)
      }

      function clearFields() {
        document.getElementById('input_race').value = ''
        document.getElementById('input_weight').value = ''
        document.getElementById('input_bp').value = ''
        document.getElementById('input_age').value = ''
      }

      function test() {
        race = document.getElementById('input_race').value
        weight = document.getElementById('input_weight').value
        bp = document.getElementById('input_bp').value
        age = document.getElementById('input_age').value
        
        if(race.length == 0) {
          race = 1
          document.getElementById('input_race').value = 1
        }

        if(weight.length == 0) {
          weight = 120
          document.getElementById('input_weight').value = 120
        }

        if(bp.length == 0) {
          bp = 270
          document.getElementById('input_bp').value = 270
        }

        if(age.length == 0) {
          age = 17
          document.getElementById('input_age').value = 17
        }

        // person profile
        profile = [0 , 0 , 0 , 0 , 0 , 0 , 0 ]
        if (race==0) {
          profile[1] = 1
        } else if (race==1) {
          profile[2] = 1
        } else {
          profile[3] = 1
        }
        wf = weight / 300
        bf = bp / 300
        af = age / 80
        profile[4] = wf
        profile[5] = bf
        profile[6] = af
        //profile = [0 , 0, 1.0 , 0 , 0.4 , 0.90 ,0.21]
        console.log('profile:'+profile)
        ps = []
        for (i=0;i <=100 ; i++) {
          ps.push(i/100)
          for (j = 1 ; j <=6 ; j++) {
            ps.push(profile[j])
          }
        }
        //console.log('ps length:'+ps.length)
        t2d = tf.tensor2d(ps , [101,7])
        //console.log(t2d)
       
        d = []
        results = model.predict(t2d)
        //console.log(results)
        results.data().then( function(rslt) {
          
          for(i = 0 ; i < 101 ; i++) {
            r = []
            for( j = i*3 ; j < (i*3) + 3 ; j++) {
              r.push(rslt[j])
            }
            g = indexOfMax(r)
            //console.log('x,y='+i+','+g)
            d.push({x:i , y:g})
          }
          updateChart(d)
        })
       
        
      }

      function updateChart(d) {
        mainChart.data.datasets[0].data = d
        mainChart.update()

      }
      function indexOfMax(arr) {
        if (arr.length === 0) {
            return -1;
        }

        var max = arr[0];
        var maxIndex = 0;

        for (var i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                maxIndex = i;
                max = arr[i];
            }
        }
        return maxIndex;
      }

      function initData(value) {
        let chartData = []
        for( i=0 ; i<=100 ; i++) {
          chartData.push({ x: i , y: value})
        }
        return chartData
      }


      function drawChart(cdata) {
        var ctx = document.getElementById('canvas').getContext('2d');
        var lineChart = new Chart(ctx, {
          type: 'line',
          data: {
            datasets: [
              {
                label: 'effectiveness: 0=good, 1=no effect, 2-=has side effect',
                showLine: true,
                fill: false,
                borderColor: 'blue',
               
                pointRadius: 0,
                
                xAxisID: 'x-axis-1',
                yAxisID: 'y-axis-1',
                data: cdata
              }
          ]
        },

        options: {
          title: {
            display: true,
            text: 'Dosage Prediction'
          },
          scales: {
            xAxes: [{
                id: 'x-axis-1',
                type: 'linear',
                position: 'bottom',
                ticks: {
                  beginAtZero: true,
                  max: 100
              },
              scaleLabel: {
                display: true,
                labelString: 'Dosage in percent'
              }
            }],
            yAxes: [
              {
                id: 'y-axis-1',
                type: 'linear',
                position: 'left',
                ticks: {
                    beginAtZero: true,
                    max: 2,
                    stepSize: 1


                }
              }
            ]
          }
        }
        });

        return lineChart
      }
    
    </script>
  </body>
</html>
